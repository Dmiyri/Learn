{"version":3,"sources":["App.module.css","Name/Tarasiuk.module.css","Hello/Hello.module.css","Friends/Friend.module.css","MySkills/MySkill.module.css","Name/Tarasiuk.jsx","Hello/InButHello.jsx","Hello/SpanHello.jsx","Friends/Friend.jsx","Hello/Hello.jsx","MySkills/MySkill.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Tarasiuk","render","className","s","name","animation","React","Component","InButHello","props","helloClick","newText","newHelloText","current","value","onHelloClick","ref","placeholder","style","marginLeft","padding","onClick","createRef","Skills","friend","Hello","friendMe","state","names","map","t","Friend","span","skill","App","skills","alert","newFriend","setState","count","skillsMe","this","i","MySkill","app","wrapper","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,QAAU,qBAAqB,OAAS,oBAAoB,MAAQ,qB,gBCA7GD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,UAAY,4BAA4B,MAAQ,0B,gBCAhGD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,sB,mBCAtDD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,MAAQ,yB,oNCgBXC,E,2MAZXC,OAAS,WACL,OACQ,yBAAKC,UAAWC,IAAEC,MACf,8HAGC,0BAAMF,UAAWC,IAAEE,WAAnB,oK,6BARGC,IAAMC,WCqBdC,GCtBSF,IAAMC,U,YDE1B,WAAYE,GAAQ,IAAD,8BACf,4CAAMA,KAGVC,WAAa,WACT,IAAIC,EAAU,EAAKC,aAAaC,QAAQC,MACxC,EAAKF,aAAaC,QAAQC,MAAQ,GAClC,EAAKL,MAAMM,aAAaJ,IAPT,EAUnBV,OAAS,WACL,OACI,6BACI,2BAAOe,IAAK,EAAKJ,aAAcK,YAAY,gFAC3C,4BAAQC,MAAO,CAACC,WAAY,MAAOC,QAAS,OAAQC,QAAS,EAAKX,YAAlE,WAZR,EAAKE,aAAeN,IAAMgB,YAFX,E,2BAFEhB,IAAMC,Y,iCEWhBgB,E,2MATbtB,OAAO,WACL,OACI,yBAAKC,UAAWC,IAAEqB,QAChB,EAAKf,MAAMe,S,6BAJAlB,IAAMC,WCoBZkB,E,2MAfXxB,OAAS,WACL,IAAIyB,EAAW,EAAKjB,MAAMkB,MAAMC,MAAMC,KAAI,SAAAC,GAAC,OAAE,kBAACC,EAAD,CAAQP,OAAQM,OAE7D,OACI,yBAAK5B,UAAWC,IAAEe,OACd,kBAAC,EAAD,CAAYH,aAAc,EAAKN,MAAMM,eACrC,wFACA,yBAAKb,UAAWC,IAAE6B,MACbN,K,6BAVDpB,IAAMC,W,iBCOXgB,E,2MATbtB,OAAO,WACL,OACI,yBAAKC,UAAWC,IAAE8B,OACf,EAAKxB,MAAMwB,Q,6BAJD3B,IAAMC,WCyCZ2B,E,2MAnCXP,MAAQ,CACJQ,OAAQ,CAAC,2EAAgB,uFAAkB,oGAC3CP,MAAO,I,EAGXb,aAAe,SAACJ,GACZyB,MAAM,SAAD,OAAUzB,IACf,IAAI0B,EAAS,sBAAO,EAAKV,MAAMC,OAAlB,CAAyBjB,IAEtC,EAAK2B,SAAS,CAACC,MAAO,EAAKZ,MAAMY,MAAQ,EAAGX,MAAOS,K,wEAInD,IAAIG,EAAWC,KAAKd,MAAMQ,OAAON,KAAI,SAAAa,GAAC,OAAI,kBAACC,EAAD,CAASV,MAAOS,OAE1D,OACI,yBAAKxC,UAAWC,IAAEyC,KACd,mPACA,yBAAK1C,UAAWC,IAAE0C,SACd,6BACI,kBAAC,EAAD,MACA,yBAAK3C,UAAWC,IAAEgC,QACd,4QACA,yBAAKjC,UAAWC,IAAE8B,OAAQO,KAGlC,6BACI,kBAAC,EAAD,CAAOb,MAAOc,KAAKd,MAAOZ,aAAc0B,KAAK1B,sB,GA7BnDT,IAAMC,WCKJuC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASlD,OAAO,kBAAC,EAAD,MAASmD,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.d4cc3ce9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__32X8E\",\"wrapper\":\"App_wrapper__3o53O\",\"skills\":\"App_skills__DiYG2\",\"skill\":\"App_skill__1LWFm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Tarasiuk_name__1Ogn8\",\"animation\":\"Tarasiuk_animation__3o-_6\",\"blink\":\"Tarasiuk_blink__C1Jx_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":\"Hello_style__1D05r\",\"span\":\"Hello_span__1XbPf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__2TrPO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skill\":\"MySkill_skill__2Z348\"};","import React from 'react';\nimport s from './Tarasiuk.module.css';\n\nclass Tarasiuk extends React.Component {\n\n    render = () => {\n        return (\n                <div className={s.name }>\n                   <div>\n                       Привет, меня зовут\n                   </div>\n                    <span className={s.animation}>Тарасюк Дмитрий Валентинович</span>\n                </div>\n        );\n    }\n}\n\nexport default Tarasiuk;\n\n","import React from 'react';\n\nclass InButHello extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.newHelloText = React.createRef();\n    }\n    helloClick = () => {\n        let newText = this.newHelloText.current.value;\n        this.newHelloText.current.value = '';\n        this.props.onHelloClick(newText);\n    };\n\n    render = () => {\n        return (\n            <div>\n                <input ref={this.newHelloText} placeholder=\"Как тебя зовут?\"/>\n                <button style={{marginLeft: '5px', padding: '5px'}} onClick={this.helloClick}>hello</button>\n            </div>\n        );\n    }\n}\n\nexport default InButHello;\n\n","import React from 'react';\n\nclass SpanHello extends React.Component {\n\n    render = () => {\n        return (\n            <div>\n                <span style={{width: '15px', margin: '5px'}}>\n                    {this.props.count}\n                </span>\n            </div>\n        );\n    }\n}\n\nexport default SpanHello;\n\n","import React from 'react';\nimport s from './Friend.module.css';\n\nclass Skills extends React.Component {\n  render=()=> {\n    return (\n        <div className={s.friend}>\n         {this.props.friend}\n        </div>\n    );\n  }\n}\n\nexport default Skills;\n","import React from 'react';\nimport SpanHello from \"./SpanHello\";\nimport InButHello from \"./InButHello\";\nimport s from './Hello.module.css'\nimport Friend from \"../Friends/Friend\";\n\nclass Hello extends React.Component {\n\n    render = () => {\n        let friendMe = this.props.state.names.map(t=><Friend friend={t}/>)\n\n        return (\n            <div className={s.style}>\n                <InButHello onHelloClick={this.props.onHelloClick}/>\n                <h3>Мои друзья:</h3>\n                <div className={s.span}>\n                    {friendMe}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Hello;\n\n","import React from 'react';\nimport s from './MySkill.module.css';\n\nclass Skills extends React.Component {\n  render=()=> {\n    return (\n        <div className={s.skill}>\n          {this.props.skill}\n        </div>\n    );\n  }\n}\n\nexport default Skills;\n","import React from 'react';\nimport s from './App.module.css';\nimport Tarasiuk from \"./Name/Tarasiuk\";\nimport Hello from \"./Hello/Hello\";\nimport MySkill from \"./MySkills/MySkill\";\n\n\nclass App extends React.Component {\n\n    state = {\n        skills: [\"Пунктуальный\", \"Исполнительный\", \"Коммуникабельный\"],\n        names: [],\n    }\n\n    onHelloClick = (newText) => {\n        alert(`Hello ${newText}`);\n        let newFriend = [...this.state.names, newText];\n\n        this.setState({count: this.state.count + 1, names: newFriend})\n    };\n\n    render() {\n        let skillsMe = this.state.skills.map(i => <MySkill skill={i}/>);\n\n        return (\n            <div className={s.app}>\n                <h2>Спасибо, что заглянули ко мне на страницу</h2>\n                <div className={s.wrapper}>\n                    <div>\n                        <Tarasiuk/>\n                        <div className={s.skills}>\n                            <div>Если коротко, то меня можно охарактеризовать:</div>\n                            <div className={s.skill}>{skillsMe}</div>\n                        </div>\n                    </div>\n                    <div>\n                        <Hello state={this.state} onHelloClick={this.onHelloClick}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}